import React, {useEffect, useState} from "react";
import { Inter } from 'next/font/google'
import Head from 'next/head'
import Image from "next/image";
import {useRouter} from "next/router";
import Modal from "react-modal";

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  let api = "http://localhost:8000/api";
  const router = useRouter();

  const [universities, setUniversities] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isModalDelete , setIsModalDelete] = useState(false);
  const [universityId, setUniversityId] = useState();

  const modalStyles = {
    overlay: {
      backgroundColor: 'rgba(0, 0, 0, 0.6)'
    },
    content: {
      border: null,
      backgroundColor: 'rgba(0, 0, 0, 0)',
      top: '50%',
      left: '50%',
      right: 'auto',
      bottom: 'auto',
      padding: 0,
      borderRadius: 10,
      marginRight: '-50%',
      transform: 'translate(-50%, -50%)'
    }
  }
  function gotoAdd() {
    router.push("/add-university")
        .then(r => console.log('success', r));
  }

  function fetchUniversities() {
    fetch(api+'/universities', {})
        .then(res => res.json())
        .then(res => {
          setUniversities(res.data);
          setIsLoading(false);
        })
        .catch(err => console.log(err));
  }

  function deleteUniversity() {
    fetch(api+'/universities/'+universityId, {
      method: 'DELETE',
    })
        .then(res => res.json())
        .then(res => {
          fetchUniversities();
          setIsModalDelete(false);
        })
        .catch(err => console.log(err));
  }

  useEffect(() => {
    fetchUniversities();
  }, []);

  return (
      <>
        <Head>
          <title>Find University</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/logo.png" />
        </Head>
        <header>
          <nav className="navbar">
            <div className="container">
              <a className="navbar-brand text-success" href="#">
                <Image src="/university.png" alt="Logo" width='30' height='30' className="d-inline-block align-text-top" />
                <span className="ms-2">អ្នកគ្រប់គ្រង</span>
              </a>
              <ul className="nav">
                <li className="nav-item dropdown">
                  <a className="nav-link dropdown-toggle text-success" href="#" role="button" data-bs-toggle="dropdown"
                     aria-expanded="false">
                    ភាសា
                  </a>
                  <ul className="dropdown-menu w-1 shadow dark:bg-gray-700 text-sm text-gray-700 dark:text-gray-200">
                    <li><a className="block px-3 py-1 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white disabled" href="#">ខ្មែរ</a></li>
                    <li><a className="block px-3 py-1 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" href="#">English</a></li>
                  </ul>
                </li>
              </ul>
            </div>
          </nav>
        </header>
        <main className="container">
          <h2 className="text-base m-2 dark:text-gray-50">បញ្ជីសកលវិទ្យាល័យ</h2>
          <div className="relative overflow-x-auto shadow-md sm:rounded-lg">
            <table className="w-full text-sm text-left text-gray-500 dark:text-gray-400">
              <thead className="text-gray-700 uppercase bg-gray-200 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="px-6 py-3">
                  #
                </th>
                <th scope="col" className="px-6 py-3">
                  រូបសញ្ញា
                </th>
                <th scope="col" className="px-6 py-3">
                  <div className="flex items-center">
                    ឈ្មោះ
                    <a href="#">
                      <svg xmlns="http://www.w3.org/2000/svg" className="w-3 h-3 ml-1" aria-hidden="true"
                           fill="currentColor" viewBox="0 0 320 512">
                        <path
                            d="M27.66 224h264.7c24.6 0 36.89-29.78 19.54-47.12l-132.3-136.8c-5.406-5.406-12.47-8.107-19.53-8.107c-7.055 0-14.09 2.701-19.45 8.107L8.119 176.9C-9.229 194.2 3.055 224 27.66 224zM292.3 288H27.66c-24.6 0-36.89 29.77-19.54 47.12l132.5 136.8C145.9 477.3 152.1 480 160 480c7.053 0 14.12-2.703 19.53-8.109l132.3-136.8C329.2 317.8 316.9 288 292.3 288z"/>
                      </svg>
                    </a>
                  </div>
                </th>
                <th scope="col" className="px-6 py-3">
                  <div className="flex items-center">
                    ប្រភេទ
                    <a href="#">
                      <svg xmlns="http://www.w3.org/2000/svg" className="w-3 h-3 ml-1" aria-hidden="true"
                           fill="currentColor" viewBox="0 0 320 512">
                        <path
                            d="M27.66 224h264.7c24.6 0 36.89-29.78 19.54-47.12l-132.3-136.8c-5.406-5.406-12.47-8.107-19.53-8.107c-7.055 0-14.09 2.701-19.45 8.107L8.119 176.9C-9.229 194.2 3.055 224 27.66 224zM292.3 288H27.66c-24.6 0-36.89 29.77-19.54 47.12l132.5 136.8C145.9 477.3 152.1 480 160 480c7.053 0 14.12-2.703 19.53-8.109l132.3-136.8C329.2 317.8 316.9 288 292.3 288z"/>
                      </svg>
                    </a>
                  </div>
                </th>
                <th scope="col" className="px-6 py-3 w-24">
                  <button id="btnAdd" type="button" className="btn bg-success text-white" onClick={gotoAdd}>បន្ថែមសកលវិទ្យាល័យ</button>
                </th>
              </tr>
              </thead>
              <tbody>
              {
                isLoading ?
                    (
                        <tr className="h-24 text-center">
                          <td className="font-bold"></td>
                          <td className="font-bold"></td>
                          <td className="font-bold">Loading...</td>
                        </tr>
                    ) : (
                        universities.length ?
                            (
                                universities.map(university =>
                                    {
                                      return (
                                          <tr className="dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600">
                                            <td scope="row" className="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                              {university.id}
                                            </td>
                                            <td className="px-6 py-4">
                                              <img src={api+"/images/"+university.logo}
                                                   alt="university_logo"
                                                   className="h-16"
                                              />
                                            </td>
                                            <td className="px-6 py-4">
                                              {university.name_km}
                                            </td>
                                            <td className="px-6 py-4">
                                              {university.university_type.type_km}
                                            </td>
                                            <td className="px-6 py-4 text-right">
                                              <div className="btn-group" role="group">

                                                <button className="text-danger hover:underline me-4" onClick={() => { setIsModalDelete(true); setUniversityId(university.id)}}>លុប</button>
                                                <button className="text-success hover:underline" onClick={e => {router.push("/detail/"+university.id).then(r => console.log('success', r));}}>លម្អិត</button>
                                              </div>
                                            </td>
                                          </tr>
                                      )
                                    }
                                )
                            ) : (
                                <tr className="h-24 text-center">
                                  <td className="font-bold"></td>
                                  <td className="font-bold"></td>
                                  <td className="font-bold">No University</td>
                                </tr>
                            )
                    )
              }
              </tbody>
            </table>
          </div>
        </main>
        <Modal isOpen={isModalDelete} onRequestClose={() => setIsModalDelete(false)} style={modalStyles}>
          <div className="relative bg-gray-50 rounded-lg shadow dark:bg-gray-700">
            <button type="button"
                    onClick={() => setIsModalDelete(false)}
                    className="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white"
                    data-modal-hide="popup-modal">
              <svg aria-hidden="true" className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
                   xmlns="http://www.w3.org/2000/svg">
                <path fillRule="evenodd"
                      d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                      clipRule="evenodd"></path>
              </svg>
              <span className="sr-only">Close modal</span>
            </button>
            <div className="p-6 text-center">
              <svg aria-hidden="true" className="mx-auto mb-4 text-gray-400 w-14 h-14 dark:text-gray-200"
                   fill="none" stroke="currentColor" viewBox="0 0 24 24"
                   xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2"
                      d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <h3 className="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Are you sure you
                want to delete this product?</h3>
              <button data-modal-hide="popup-modal" type="button"
                      onClick={deleteUniversity}
                      className="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                Yes, I'm sure
              </button>
              <button data-modal-hide="popup-modal" type="button"
                      onClick={() => setIsModalDelete(false)}
                      className="text-gray-500 hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">No,
                cancel
              </button>
            </div>
          </div>
        </Modal>
      </>
  )
}